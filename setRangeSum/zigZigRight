treeNode * zigZigRight(treeNode * currentNode) {
    treeNode * parent = currentNode->parent, * rightChild = currentNode->right, * parentRightChild = currentNode->parent->right, * grandParent = currentNode->parent->parent;
    
    currentNode->parent = grandParent->parent;
    currentNode->right = parent;
    
    parent->parent = currentNode;
    parent->left = rightChild;
    parent->right = grandParent;
    
    if (parentRightChild != NULL) {
        parentRightChild->parent = grandParent;
    }
    
    if (rightChild != NULL) {
        rightChild->parent = parent;
    }
    
    if (grandParent->parent != NULL) {
        if (currentNode->key > grandParent->parent->key) {
            grandParent->parent->right = currentNode;
        } else {
            grandParent->parent->left = currentNode;
        }
    }
    grandParent->left = parentRightChild;
    grandParent->parent = parent;
    
    newSum(grandParent);
    newSum(parent);
    newSum(currentNode);
    
    return currentNode;
}